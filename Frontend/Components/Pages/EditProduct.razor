@page "/edit-product/{id:int}"
@inject ProductCrudBlazor.Services.ProductService ProductService
@using ProductCrudBlazor.Models
@inject NavigationManager Navigation

<div class="crud-card">
    <div class="crud-header">
        <h3 class="mb-0"><i class="bi bi-pencil"></i> Edit Product</h3>
    </div>

    <div class="card-body p-4">
        @if (product == null)
        {
            <div class="text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
        else
        {
            <EditForm Model="@product" OnValidSubmit="UpdateProduct">
                <DataAnnotationsValidator />

                <div class="form-floating mb-3">
                    <InputText @bind-Value="product.Name" class="form-control crud-form-control" id="name" placeholder="Product name" />
                    <label for="name">Product Name</label>
                    <ValidationMessage For="@(() => product.Name)" class="validation-message" />
                </div>

                <div class="form-floating mb-3">
                    <InputNumber @bind-Value="product.Price" class="form-control crud-form-control" id="price" placeholder="Price" />
                    <label for="price">Price</label>
                    <ValidationMessage For="@(() => product.Price)" class="validation-message" />
                </div>

                <div class="form-floating mb-4">
                    <InputNumber @bind-Value="product.Stock" class="form-control crud-form-control" id="stock" placeholder="Stock" />
                    <label for="stock">Stock</label>
                    <ValidationMessage For="@(() => product.Stock)" class="validation-message" />
                </div>

                <div class="d-flex gap-2 justify-content-end">
                    <button class="btn btn-secondary crud-btn" type="button" @onclick="@(() => Navigation.NavigateTo("/"))">
                        <i class="bi bi-x-circle"></i> Cancel
                    </button>
                    <button class="btn btn-primary crud-btn" type="submit">
                        <i class="bi bi-check-circle"></i> Save Changes
                    </button>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    private Product product;

    protected override async Task OnInitializedAsync()
    {
        product = await ProductService.GetProductByIdAsync(Id);
    }

    private async Task UpdateProduct()
    {
        await ProductService.UpdateProductAsync(product);
        Navigation.NavigateTo("/");
    }
}
