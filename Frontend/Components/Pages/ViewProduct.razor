@page "/view-product/{id:int}"
@inject ProductCrudBlazor.Services.ProductService ProductService
@using ProductCrudBlazor.Models
@inject NavigationManager Navigation

<div class="crud-card">
    <div class="crud-header">
        <h3 class="mb-0"><i class="bi bi-eye"></i> Product Details</h3>
    </div>

    <div class="card-body p-4">
        @if (product == null)
        {
            <div class="text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
        else
        {
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label class="form-label fw-bold">Name</label>
                        <p class="form-control crud-form-control">@product.Name</p>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="mb-3">
                        <label class="form-label fw-bold">Price</label>
                        <p class="form-control crud-form-control">@product.Price.ToString("C")</p>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="mb-3">
                        <label class="form-label fw-bold">Stock</label>
                        <p class="form-control crud-form-control">@product.Stock</p>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-end gap-2">
                <button class="btn btn-secondary crud-btn" @onclick='() => Navigation.NavigateTo("/")'>
                    <i class="bi bi-arrow-left"></i> Back
                </button>
                <button class="btn btn-warning crud-btn" @onclick='() => Navigation.NavigateTo($"/edit-product/{product.Id}")'>
                    <i class="bi bi-pencil"></i> Edit
                </button>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    private Product product;

    protected override async Task OnInitializedAsync()
    {
        product = await ProductService.GetProductByIdAsync(Id);
    }
}
